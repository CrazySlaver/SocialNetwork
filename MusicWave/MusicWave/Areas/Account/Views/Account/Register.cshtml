@using System.Web.UI.WebControls
@using reCAPTCHA.MVC
@model MusicWave.Models.CustomUser

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript" src="/scripts/moment.min.js"></script>
<script type="text/javascript" src="/scripts/bootstrap.min.js"></script>
<script type="text/javascript" src="/scripts/bootstrap-datetimepicker.js"></script>
<script src='https://www.google.com/recaptcha/api.js'></script>
<link rel="stylesheet" href="/Content/bootstrap-datetimepicker.css" />
<script type="text/javascript">
    $(document).on('change', '.btn-file :file', function () {
        var input = $(this),
            numFiles = input.get(0).files ? input.get(0).files.length : 1,
            label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
        input.trigger('fileselect', [numFiles, label]);
    });

    $(document).ready(function () {
        $('.btn-file :file').on('fileselect', function (event, numFiles, label) {

            var input = $(this).parents('.input-group').find(':text'),
                log = numFiles > 1 ? numFiles + ' files selected' : label;

            if (input.length) {
                input.val(log);
            } else {
                if (log) alert(log);
            }

        });
    });

    $(function () {
        var dateNow = new Date();
        $('#datetimepicker10').datetimepicker({
            viewMode: 'years',
            format: 'DD/MM/YYYY',
            maxDate: new Date(),
            defaultDate: dateNow

        });
    });
    $(function () {

        $(".wizard-step:first").fadeIn(); // show first step
        $(".btn-submit").hide();

        // attach backStep button handler
        // hide on first step
        $("#back-step").hide().click(function () {
            var $step = $(".wizard-step:visible"); // get current step

            if ($step.prev().hasClass("wizard-step")) { // is there any previous step?
                $step.hide().prev().fadeIn(); // show it and hide current step

                // disable backstep button?
                if (!$step.prev().prev().hasClass("wizard-step")) {
                    $("#back-step").hide();
                }
            }
            $(".nav-next").first().show(function next() {
                $(this).next(".nav-next").show(next);
            });
            $(".btn-submit").hide();
        });

        // attach nextStep button handler
        $("#next-step").click(function () {

            var $step = $(".wizard-step:visible"); // get current step

            var validator = $("form").validate();
            var anyError = false;
            $step.find(".navigation").each(function () {
                if (!validator.element(this)) {
                    anyError = true;
                }
            });

            if (anyError)
                return false;

            if ($step.next().hasClass("wizard-step")) { // is there any next step?
                $step.hide().next().fadeIn(); // show it and hide current step
                $("#back-step").show(); // recall to show backStep button
            }
        });

        $("#next-step").click(function () {
            var $step = $(".wizard-step:visible");

            if ($step.hasClass("confirm")) {
                $(".nav-next").first().hide(function next() {
                    $(this).next(".nav-next").hide(next);
                });
                $(".btn-submit").show();
            }

        });
    });


</script>

<h2>Registration</h2>

@using (Html.BeginForm(MVC.Account.Account.Register(), FormMethod.Post, new { enctype = "multipart/form-data", @id = "regForm" }))
{
    @Html.AntiForgeryToken()
    <br />
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <fieldset>
            <div class="wizard-step">
                <h4>Step 1</h4>
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group ">
                            <div class="input-group-addon">
                                <span id="basic-addon2">@@</span>
                            </div>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", style = "width: 240px" } })

                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="wizard-step confirm  hide-btn">
                <h4>Step 2</h4>

                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class='input-group date' id='datetimepicker10' style="width: 276px">

                            <span class=" input-group-addon">
                                <span class="glyphicon glyphicon-calendar">
                                </span>
                            </span>
                            @Html.TextBoxFor(model => model.Age, new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="form-group ">
                    <div class="col-md-2"></div>
                    <div class="btn-group col-md-10" data-toggle="buttons">
                        <label class="btn btn-default">
                            @Html.RadioButtonFor(model => model.Sex, "Male", new { @class = "btn btn-default **active**" })
                            Male
                        </label>
                        <label class="btn btn-default">
                            @Html.RadioButtonFor(model => model.Sex, "Female", new { @class = "btn btn-default" })
                            Female
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2"></div>
                    <div class="input-group col-md-10">
                        <span class="input-group-btn">
                            <span class="btn btn-primary btn-file">
                                Browse&hellip;
                                @Html.TextBoxFor(model => model.ImageContentType, new { @type = "file" })
                            </span>
                        </span>
                        @Html.TextBox("ImageContentType", "", new { @class = "form-control", style = "width: 190px", placeholder = "Avatar", type = "text", name = "file", id = "file", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control ", style = "width=400px; height: 100px;", placeholder = "A few words about you..." } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group ">
                    <div class="col-md-2"></div>
                    <div class="col-md-10">
                        @Html.Recaptcha()
                        @Html.ValidationMessage("ReCaptch")
                        <div class="g-recaptcha" data-sitekey="6LfDDhITAAAAABKoUb2GMbzUs700sGsAkm_tKMyW"></div>
                    </div>
                </div>
            </div>

            <div class="wizard-step ">
                <h4>Step 3</h4>

            </div>

            <div class="form-group">
            <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    <input type="button" id="back-step" name="back-step" value="< Back" class="btn btn-default nav-back"/>
                    <input type="button" id="next-step" name="next-step" value="Next >" class="btn btn-default nav-next"/>
                    <input type="submit" value="Done" class="btn btn-default btn-submit"/>
                </div>
            </div>
        </fieldset>
    </div>
}



<style>
    .wizard-step {
        display: none;
    }

    .btn-file {
        position: relative;
        overflow: hidden;
        margin-left: 14px;
    }

        .btn-file input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            background: red;
            cursor: inherit;
            display: block;
        }

    input[readonly] {
        background-color: white !important;
        cursor: text !important;
    }
</style>

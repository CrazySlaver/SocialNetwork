// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MusicWave.Areas.UserProfile.Controllers
{
    public partial class UserController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected UserController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetUsers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUsers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddUserToFriend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddUserToFriend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AcceptFriendship()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptFriendship);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RejectFriendship()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RejectFriendship);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public UserController Actions { get { return MVC.UserProfile.User; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "UserProfile";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "User";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "User";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Friends = "Friends";
            public readonly string GetUsers = "GetUsers";
            public readonly string AddUserToFriend = "AddUserToFriend";
            public readonly string GetNotification = "GetNotification";
            public readonly string AcceptFriendship = "AcceptFriendship";
            public readonly string RejectFriendship = "RejectFriendship";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Friends = "Friends";
            public const string GetUsers = "GetUsers";
            public const string AddUserToFriend = "AddUserToFriend";
            public const string GetNotification = "GetNotification";
            public const string AcceptFriendship = "AcceptFriendship";
            public const string RejectFriendship = "RejectFriendship";
        }


        static readonly ActionParamsClass_GetUsers s_params_GetUsers = new ActionParamsClass_GetUsers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUsers GetUsersParams { get { return s_params_GetUsers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUsers
        {
            public readonly string name = "name";
        }
        static readonly ActionParamsClass_AddUserToFriend s_params_AddUserToFriend = new ActionParamsClass_AddUserToFriend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddUserToFriend AddUserToFriendParams { get { return s_params_AddUserToFriend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddUserToFriend
        {
            public readonly string friendId = "friendId";
        }
        static readonly ActionParamsClass_AcceptFriendship s_params_AcceptFriendship = new ActionParamsClass_AcceptFriendship();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AcceptFriendship AcceptFriendshipParams { get { return s_params_AcceptFriendship; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AcceptFriendship
        {
            public readonly string friendId = "friendId";
        }
        static readonly ActionParamsClass_RejectFriendship s_params_RejectFriendship = new ActionParamsClass_RejectFriendship();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RejectFriendship RejectFriendshipParams { get { return s_params_RejectFriendship; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RejectFriendship
        {
            public readonly string friendId = "friendId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Friends = "Friends";
                public readonly string GetUsers = "GetUsers";
                public readonly string Index = "Index";
            }
            public readonly string Friends = "~/Areas/UserProfile/Views/User/Friends.cshtml";
            public readonly string GetUsers = "~/Areas/UserProfile/Views/User/GetUsers.cshtml";
            public readonly string Index = "~/Areas/UserProfile/Views/User/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_UserController : MusicWave.Areas.UserProfile.Controllers.UserController
    {
        public T4MVC_UserController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FriendsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Friends()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Friends);
            FriendsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetUsersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string name);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetUsers(string name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUsers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            GetUsersOverride(callInfo, name);
            return callInfo;
        }

        [NonAction]
        partial void AddUserToFriendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid friendId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddUserToFriend(System.Guid friendId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddUserToFriend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "friendId", friendId);
            AddUserToFriendOverride(callInfo, friendId);
            return callInfo;
        }

        [NonAction]
        partial void GetNotificationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNotification()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNotification);
            GetNotificationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AcceptFriendshipOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid friendId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AcceptFriendship(System.Guid friendId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptFriendship);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "friendId", friendId);
            AcceptFriendshipOverride(callInfo, friendId);
            return callInfo;
        }

        [NonAction]
        partial void RejectFriendshipOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid friendId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RejectFriendship(System.Guid friendId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RejectFriendship);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "friendId", friendId);
            RejectFriendshipOverride(callInfo, friendId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
